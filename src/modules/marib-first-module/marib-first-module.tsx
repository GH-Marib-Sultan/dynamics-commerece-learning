/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import * as React from 'react';

import { IMaribFirstModuleData } from './marib-first-module.data';
import { IMaribFirstModuleProps } from './marib-first-module.props.autogenerated';

const _renderImage = (imageURL: string): JSX.Element => {
    return <img src={imageURL} alt='background image' />;
};

const _renderButton = (buttonText: string, cssClass: React.CSSProperties): JSX.Element => {
    return <button type='button' style={cssClass} className='btn btn-primary col-md-4'>{buttonText}</button>;
};

export interface IRegionDropdown {
    text: string;
    value: number;
}

const _renderDropdown = (dropdownOptions: IRegionDropdown[], cssClass: React.CSSProperties): JSX.Element => {

    const selectOptions = [];
    for (const [, dropdownItem] of dropdownOptions.entries()) {
        selectOptions.push(<option value={dropdownItem.value}>{dropdownItem.text}</option>);
    }

    return (
        <select style={cssClass}>
            {selectOptions}
        </select >
    );
};

/**
 *
 * MaribFirstModule component
 * @extends {React.PureComponent<IMaribFirstModuleProps<IMaribFirstModuleData>>}
 */
export default class MaribFirstModule extends React.PureComponent<IMaribFirstModuleProps<IMaribFirstModuleData>> {

    public render(): JSX.Element {
        const { config } = this.props;
        const backgroundImage = _renderImage(config.bgImageURL);

        const myDropdownOptions: IRegionDropdown[] = [
            { value: 1, text: 'Pakistan' },
            { value: 2, text: 'India' },
            { value: 3, text: 'China' },
            { value: 4, text: 'Iran' }
        ];

        return (
            <div className='row'>
                {backgroundImage}
                {_renderButton(config.btnText || '', selectBtnCss)}
                {_renderDropdown(myDropdownOptions, dropdownCss)}
            </div>
        );
    }

}

const selectBtnCss: React.CSSProperties = {
    position: 'absolute',
    top: 350,
    left: 1100
};

const dropdownCss: React.CSSProperties = {
    position: 'absolute',
    top: 320,
    left: 1100
};
